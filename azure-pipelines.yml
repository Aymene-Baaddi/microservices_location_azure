trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerRegistryServiceConnection: 'mywebapp'
  containerRegistry: 'mywebapp.azurecr.io'
  dockerComposeFile: 'docker-compose.yml'
  SONARQUBE_SERVICE_CONNECTION: 'bd-sonarcube'

jobs:
- job: SonarQubeAnalysis
  displayName: 'SonarQube Analysis for All Microservices'
  steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: NodeTaskRunnerInstaller@0
      inputs:
        nodeVersion: '20'
    - task: SonarQubePrepare@6
      inputs:
        SonarQube: 'bd-sonarcube'
        scannerMode: 'CLI'
        cliVersion: '6.1.0.4477'
        configMode: 'manual'
        cliProjectKey: 'AT2Car_AT2Car_AZDfK74FKu-cI83U3IVc'
        cliProjectName: 'AT2Car'
        cliSources: '.'
    - task: SonarQubeAnalyze@6
      inputs:
        jdkversion: 'JAVA_HOME_17_X64'
    - task: SonarQubePublish@6
      inputs:
        pollingTimeoutSec: '300'

- job: DockerBuildAndPush
  displayName: 'Build and Push Docker Images'
  dependsOn: 
    - SonarQubeAnalysis
  steps:
    - task: DockerCompose@0
      displayName: 'Build Docker Compose Images'
      inputs:
        action: 'Build services'
        dockerComposeFile: '$(dockerComposeFile)'
        qualifyImageNames: true
        additionalImageTags: |
          $(Build.BuildId)
          latest
        containerregistry: '$(dockerRegistryServiceConnection)'
    - task: Docker@2
      displayName: 'Login to ACR'
      inputs:
        command: 'login'
        containerRegistry: '$(dockerRegistryServiceConnection)'
    - task: DockerCompose@0
      displayName: 'Push Docker Compose Images'
      inputs:
        action: 'Push services'
        dockerComposeFile: '$(dockerComposeFile)'
        qualifyImageNames: true
        additionalImageTags: |
          $(Build.BuildId)
          latest
        containerregistry: '$(dockerRegistryServiceConnection)'
